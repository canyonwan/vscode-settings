{
    "editor.accessibilitySupport": "off",
    "editor.cursorSmoothCaretAnimation": true,
    "editor.find.addExtraSpaceOnTop": false,
    "editor.fontFamily": "Input, JetBrains Mono,Fira Code, monospace",
    "editor.fontLigatures": "'ss01', 'ss02', 'ss03', 'ss06', 'zero'",
    "editor.selectionHighlight": false,
    "editor.glyphMargin": true,
    "editor.guides.bracketPairs": "active",
    "editor.inlineSuggest.enabled": true,
    "editor.lineNumbers": "relative",
    "editor.multiCursorModifier": "ctrlCmd",
    "editor.renderWhitespace": "none",
    "editor.suggestSelection": "first",
    "editor.tabSize": 2,
    "editor.unicodeHighlight.invisibleCharacters": false,
    "editor.codeActionsOnSave": {
        "source.fixAll": false,
        "source.fixAll.eslint": true, // this allows ESLint to auto fix on save
        "source.organizeImports": false
    },
    "where-am-i.colorful": true,
    "where-am-i.color": "#0095FF",
    "smartClicks.rules": {
        "dash": false,
        "html-element": false
    },
    "consoleLog.Color Bg": "#0095FF",
    "consoleLog.Color": "white",
    "where-am-i.projectSetting": {},
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
    "window.autoDetectColorScheme": true,
    "window.dialogStyle": "custom",
    "window.nativeTabs": false, // this is great, macOS only
    "window.titleBarStyle": "custom",
    "workbench.editor.closeOnFileDelete": true,
    "workbench.editor.highlightModifiedTabs": true,
    "workbench.editor.tabCloseButton": "left",
    "workbench.editor.limit.enabled": true,
    "workbench.editor.limit.perEditorGroup": true,
    "workbench.editor.limit.value": 5,
    "workbench.fontAliasing": "antialiased", // 字体平滑
    "workbench.list.smoothScrolling": true,
    "workbench.preferredDarkColorTheme": "Vitesse Dark",
    "workbench.preferredLightColorTheme": "Vitesse Light",
    "workbench.startupEditor": "newUntitledFile",
    "workbench.tree.expandMode": "singleClick",
    "workbench.tree.indent": 10,
    "extensions.autoUpdate": "onlyEnabledExtensions",
    "extensions.ignoreRecommendations": true,
    "files.eol": "\n",
    "files.insertFinalNewline": true,
    "files.simpleDialog.enable": true,
    "git.autofetch": true,
    "git.confirmSync": false,
    "git.enableSmartCommit": true,
    "git.untrackedChanges": "separate",
    "terminal.integrated.cursorBlinking": true,
    "terminal.integrated.cursorStyle": "line",
    "terminal.integrated.fontWeight": "300",
    "terminal.integrated.persistentSessionReviveProcess": "never",
    "terminal.integrated.tabs.enabled": true,
    "scm.diffDecorationsGutterWidth": 2,
    "debug.onTaskErrors": "debugAnyway",
    "diffEditor.ignoreTrimWhitespace": false,
    "search.exclude": {
        "**/.git": true,
        "**/.github": true,
        "**/.nuxt": true,
        "**/.output": true,
        "**/.pnpm": true,
        "**/.vscode": true,
        "**/.yarn": true,
        "**/bower_components": true,
        "**/dist/**": true,
        "**/logs": true,
        "**/node_modules": true,
        "**/out/**": true,
        "**/package-lock.json": true,
        "**/pnpm-lock.yaml": true,
        "**/tmp": true,
        "**/yarn.lock": true
    },
    // Extension configs
    "emmet.showSuggestionsAsSnippets": true,
    "emmet.triggerExpansionOnTab": false,
    "errorLens.enabledDiagnosticLevels": [
        "warning",
        "error"
    ],
    "errorLens.excludeBySource": [
        "cSpell",
        "Grammarly",
        "eslint"
    ],
    // ESLint config: https://github.com/antfu/eslint-config
    "eslint.codeAction.showDocumentation": {
        "enable": true
    },
    "eslint.quiet": true,
    "eslint.validate": [
        "javascript",
        "typescript",
        "javascriptreact",
        "typescriptreact",
        "vue",
        "html",
        "markdown",
        "json",
        "jsonc",
        "json5"
    ],
    "cSpell.allowCompoundWords": true,
    "cSpell.language": "en,en-US",
    "css.lint.hexColorLength": "ignore",
    "gitlens.codeLens.authors.enabled": false,
    "gitlens.codeLens.enabled": false,
    "gitlens.codeLens.recentChange.enabled": false,
    "gitlens.menus": {
        "editor": {
            "blame": false,
            "clipboard": true,
            "compare": true,
            "history": false,
            "remote": false
        },
        "editorGroup": {
            "blame": true,
            "compare": false
        },
        "editorTab": {
            "clipboard": true,
            "compare": true,
            "history": true,
            "remote": true
        },
        "explorer": {
            "clipboard": true,
            "compare": true,
            "history": true,
            "remote": true
        },
        "scm": {
            "authors": true
        },
        "scmGroup": {
            "compare": true,
            "openClose": true,
            "stash": true
        },
        "scmGroupInline": {
            "stash": true
        },
        "scmItem": {
            "clipboard": true,
            "compare": true,
            "history": true,
            "remote": false,
            "stash": true
        }
    },
    "iconify.annotations": true,
    "iconify.inplace": true,
    "volar.autoCompleteRefs": true,
    "volar.codeLens.pugTools": false,
    "volar.codeLens.scriptSetupTools": true,
    "volar.completion.preferredTagNameCase": "pascal",
    "volar.takeOverMode.enabled": "auto",
    "windicss.enableCodeFolding": true, // I only use Prettier for manually formatting
    "prettier.printWidth": 200,
    "prettier.semi": false,
    "prettier.singleQuote": true,
    // File Nesting
    // this might not be up to date with the repo, please check yourself
    // updated 2022-03-10 06:10
    // https://github.com/antfu/vscode-file-nesting-config
    "workbench.colorCustomizations": {
        "editorCursor.foreground": "#FF8C37", // 光标颜色
        // "editor.background": "#181818"
        // "titleBar.activeBackground": "#253138", // 顶部
        // "titleBar.border": "#253138", // 顶部线
        // "sideBar.background": "#253138", // 文件树
        // "sideBar.border": "#253138", // 文件树右边边框
        // "sideBarSectionHeader.background": "#253138", // 文件树选项卡
        // "activityBar.background": "#253138", // 最左侧那块
        // "activityBar.border": "#253138", // 最左侧那块右边框
        // "statusBar.background": "#253137", // 底部那块
        // "statusBar.debuggingBackground": "#5C15E0",
        // "statusBar.noFolderBackground": "#5C15E0",
        // "statusBar.foreground": "#4E9257",
        // "statusBar.border": "#253137",
        // "activityBarBadge.background": "#84FFFF", // 徽标
        // "activityBar.activeBorder": "#84FFFF", // 选中的线
        "tab.activeBorderTop": "#2856F2"
    },
    "terminal.integrated.env.osx": {
        "FIG_NEW_SESSION": "1"
    },
    "workbench.colorTheme": "Vitesse Dark Soft",
    "workbench.iconTheme": "file-icons",
    "javascript.inlayHints.parameterNames.enabled": "all",
    // vim
    "vim.leader": "<space>",
    "vim.vimrc.enable": true,
    "vim.vimrc.path": "~/.vimrc",
    "vim.easymotion": true,
    "vim.incsearch": true,
    "vim.useCtrlKeys": true,
    "vim.hlsearch": true,
    "vim.surround": true,
    "vim.normalModeKeyBindingsNonRecursive": [
        // 键位自定义映射
        {
            "before": [
                "H"
            ],
            "after": [
                "^"
            ]
        },
        {
            "before": [
                "L"
            ],
            "after": [
                "$"
            ]
        },
        {
            "before": [
                "K"
            ],
            "after": [
                "H"
            ]
        },
        {
            "before": [
                "J"
            ],
            "after": [
                "L"
            ]
        },
        {
            "before": [
                ":"
            ],
            "commands": [
                "workbench.action.showCommands"
            ]
        },
        {
            "before": [
                "<leader>",
                "d"
            ],
            "after": [
                "d",
                "d"
            ]
        },
        {
            "before": [
                "<leader>",
                "s"
            ],
            "after": [
                "<leader>",
                "leader",
                "s"
            ]
        },
        {
            "before": [
                "J"
            ],
            "after": [
                "g",
                "t"
            ]
        },
        {
            "before": [
                "K"
            ],
            "after": [
                "g",
                "T"
            ]
        },
        {
            "before": [
                "c",
                "c"
            ],
            "after": [
                "g",
                "c",
                "c"
            ]
        },
        {
            "before": [
                "<leader>",
                "P"
            ],
            "after": [
                "\"",
                "0",
                "p"
            ]
        },
        {
            "before": [
                "<leader>",
                "r",
                "n"
            ],
            "commands": [
                "editor.action.rename"
            ]
        },
        {
            "before": [
                "<Leader>",
                "e"
            ],
            "commands": [
                "workbench.view.explorer"
            ]
        },
        {
            "before": [
                "<leader>",
                "p",
                "p",
            ],
            "commands": [
                "projectManager.listProjectsNewWindow"
            ]
        },
        {
            "before": [
                "<leader>",
                "t",
            ],
            "commands": [
                "workbench.view.explorer"
            ]
        }
    ],
    "vim.normalModeKeyBindings": [
        // 映射vscode commond
        {
            "before": [
                "<C-n>"
            ],
            "commands": [
                ":nohl"
            ]
        },
        {
            "before": [
                "leader",
                "w"
            ],
            "commands": [
                "workbench.action.files.save"
            ]
        },
        {
            "before": [
                "leader",
                "g",
                "i",
                "t"
            ],
            "commands": [
                "workbench.view.scm"
            ]
        },
        {
            "before": [
                "leader",
                "p"
            ],
            "commands": [
                "workbench.view.explorer"
            ]
        },
        {
            "before": [
                "leader",
                "k",
                "e",
                "y"
            ],
            "commands": [
                "workbench.action.openGlobalKeybindings"
            ]
        },
        {
            "before": [
                "leader",
                "s",
                "p"
            ],
            "commands": [
                "workbench.action.splitEditorDown"
            ]
        },
        {
            "before": [
                "leader",
                "v",
                "s"
            ],
            "commands": [
                "workbench.action.splitEditorRight"
            ]
        },
        {
            "before": [
                "leader",
                "l"
            ],
            "commands": [
                "workbench.action.focusRightGroup"
            ]
        },
        {
            "before": [
                "leader",
                "h"
            ],
            "commands": [
                "workbench.action.focusLeftGroup"
            ]
        },
        {
            "before": [
                "leader",
                "j"
            ],
            "commands": [
                "workbench.action.focusBelowGroup"
            ]
        },
        {
            "before": [
                "leader",
                "k"
            ],
            "commands": [
                "workbench.action.focusAboveGroup"
            ]
        },
        {
            "before": [
                "leader",
                "z"
            ],
            "commands": [
                "workbench.action.toggleZenMode"
            ]
        },
        {
            "before": [
                "leader",
                "full"
            ],
            "commands": [
                "workbench.action.toggleFullScreen"
            ]
        },
        {
            "before": [
                "leader",
                "t",
                "e",
                "r"
            ],
            "commands": [
                "workbench.action.terminal.toggleTerminal"
            ]
        },
        // 快捷输入console.log
        {
            "before": [
                "leader",
                "l",
                "o",
                "g"
            ],
            "commands": [
                "console.log.wrap.prefix"
            ]
        }
    ],
    // im-select
    "vim.autoSwitchInputMethod.enable": false,
    "vim.autoSwitchInputMethod.defaultIM": "com.apple.keylayout.ABC",
    "vim.autoSwitchInputMethod.obtainIMCmd": "/usr/local/bin/im-select",
    "vim.autoSwitchInputMethod.switchIMCmd": "/usr/local/bin/im-select {im}",
    "todo-tree.general.tags": [
        "BUG",
        "HACK",
        "FIX",
        "TODO",
        "TAG",
        "REVIEW"
    ],
    "todo-tree.highlights.defaultHighlight": {
        "foreground": "#ffffff",
        "background": "#DC7220",
        "icon": "check",
        "rulerColour": "#E6FF57",
        "type": "tag",
        "iconColour": "#E6FF57"
    },
    "todo-tree.highlights.customHighlight": {
        "TODO": {
            "background": "#00BC7E",
            "rulerColour": "#00BC7E",
            "iconColour": "#00BC7E"
        },
        "REVIEW": {
            "background": "#AB7DF7",
            "rulerColour": "#AB7DF7",
            "iconColour": "#AB7DF7"
        },
        "FIXME": {
            "background": "#E64957",
            "icon": "beaker",
            "rulerColour": "#E64957",
            "iconColour": "#E64957",
        },
        "TAG": {
            "background": "#3C49E5",
            "icon": "tag",
            "rulerColour": "#3C49E5",
            "iconColour": "#3C49E5",
            "rulerLane": "full"
        },
    },
    "cSpell.userWords": [
        "antd",
        "axios",
        "dcloudio",
        "echarts",
        "esbuild",
        "unref",
        "vant",
        "vite",
        "vitest",
        "vuex",
        "Windi",
        "wxcomponents"
    ],
    "[jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "editor.bracketPairColorization.enabled": true,
    "explorer.fileNesting.enabled": true,
    "explorer.fileNesting.expand": true,
    "explorer.fileNesting.patterns": {
        "//": "Last update at 5/12/2022, 11:44:20 AM",
        "*.asax": "$(capture).*.cs, $(capture).*.vb",
        "*.ascx": "$(capture).*.cs, $(capture).*.vb",
        "*.ashx": "$(capture).*.cs, $(capture).*.vb",
        "*.aspx": "$(capture).*.cs, $(capture).*.vb",
        "*.c": "$(capture).h",
        "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx",
        "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
        "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx",
        "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
        "*.css": "$(capture).css.map, $(capture).*.css",
        "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx",
        "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
        "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
        "*.java": "$(capture).class",
        "*.js": "$(capture).js.map, $(capture).*.js",
        "*.jsx": "$(capture).js, $(capture).*.jsx",
        "*.master": "$(capture).*.cs, $(capture).*.vb",
        "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
        "*.pubxml": "$(capture).pubxml.user",
        "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
        "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
        "*.ts": "$(capture).js, $(capture).*.ts",
        "*.tsx": "$(capture).ts, $(capture).*.tsx",
        "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
        "*.vue": "$(capture).*.ts, $(capture).*.js",
        ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
        ".env": "*.env, .env.*, .envrc, env.d.ts",
        ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
        ".project": ".classpath",
        "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
        "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json",
        "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
        "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
        "cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
        "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
        "default.nix": "shell.nix",
        "dockerfile": ".dockerignore, docker-compose.*, dockerfile*",
        "flake.nix": "flake.lock",
        "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
        "gemfile": ".ruby-version, gemfile.lock",
        "go.mod": ".air*, go.sum",
        "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
        "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
        "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
        "package.json": ".browserslist*, .circleci*, .codecov, .commitlint*, .cz-config.js, .czrc, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lighthouserc.*, .lintstagedrc*, .markdownlint*, .mocha*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, api-extractor.json, apollo.config.*, appveyor*, ava.config.*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, cypress.json, dangerfile*, dprint.json, firebase.json, grunt*, gulp*, jasmine.*, jenkins*, jest.config.*, jsconfig.*, karma*, lerna*, lighthouserc.*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, phpcs.xml, playwright.config.*, pm2.*, pnpm*, prettier*, pullapprove*, puppeteer.config.*, pyrightconfig.json, renovate*, rollup.config.*, stylelint*, tsconfig.*, tsdoc.*, tslint*, tsup.config.*, turbo*, typedoc*, vercel*, vetur.config.*, vitest.config.*, webpack.config.*, workspace.json, xo.config.*, yarn*",
        "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock",
        "pyproject.toml": ".pdm.toml, pdm.lock, pyproject.toml",
        "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
        "readme*": "authors, backers.md, changelog*, citation*, code_of_conduct.md, codeowners, contributing.md, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors.md",
        "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
        "rush.json": ".browserslist*, .circleci*, .codecov, .commitlint*, .cz-config.js, .czrc, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lighthouserc.*, .lintstagedrc*, .markdownlint*, .mocha*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, api-extractor.json, apollo.config.*, appveyor*, ava.config.*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, cypress.json, dangerfile*, dprint.json, firebase.json, grunt*, gulp*, jasmine.*, jenkins*, jest.config.*, jsconfig.*, karma*, lerna*, lighthouserc.*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, phpcs.xml, playwright.config.*, pm2.*, pnpm*, prettier*, pullapprove*, puppeteer.config.*, pyrightconfig.json, renovate*, rollup.config.*, stylelint*, tsconfig.*, tsdoc.*, tslint*, tsup.config.*, turbo*, typedoc*, vercel*, vetur.config.*, vitest.config.*, webpack.config.*, workspace.json, xo.config.*, yarn*",
        "shims.d.ts": "*.d.ts",
        "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
        "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
        "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*"
    },
    "editor.renderControlCharacters": false,
    "[typescript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "editor.linkedEditing": true,
    "leetcode.endpoint": "leetcode-cn",
    "leetcode.workspaceFolder": "/Users/canyonwan/Documents/leetcode-playground",
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "[javascript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[json]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "files.associations": {
        ".prettierrc": "typescript"
    },
    "prettier.requireConfig": true,
    "prettier.arrowParens": "avoid",
    "errorLens.onSave": true,
    "editor.formatOnSave": true,
    "typescript.updateImportsOnFileMove.enabled": "always",
    "editor.wordWrap": "on",
    "go.toolsManagement.autoUpdate": true,
    "workbench.sideBar.location": "right",
    "workbench.productIconTheme": "icons-carbon",
    "editor.minimap.enabled": false,
    "javascript.updateImportsOnFileMove.enabled": "always",
    "window.commandCenter": true,
    "editor.quickSuggestions": {
        "comments": "on",
        "strings": "on"
    },
    "breadcrumbs.enabled": false,
    "[dart]": {
        "editor.formatOnSave": true,
        "editor.formatOnType": true,
        "editor.rulers": [
            80
        ],
        "editor.selectionHighlight": false,
        "editor.suggest.snippetsPreventQuickSuggestions": false,
        "editor.suggestSelection": "first",
        "editor.tabCompletion": "onlySnippets",
        "editor.wordBasedSuggestions": false
    },
    "dart.showInspectorNotificationsForWidgetErrors": false,
    "editor.experimental.stickyScroll.enabled": true,
    "editor.fontSize": 12.5,
}
